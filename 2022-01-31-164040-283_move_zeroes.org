:PROPERTIES:
:ID:       F70A53FD-1410-4C75-8B2C-FCFDCCB95211
:END:
#+title: 283 Move Zeroes
#+filetags: :review:leetcode:blog:

#+begin_export html
---
layout: post
title: "283 Move Zeroes"
excerpt: I didn't know it was spelled "Zeroes"
---
#+end_export


* Description
Given an integer array ~nums~, move all ~0~ to the end of the it while maintaining the relative order of the non-zero elements.

Constraints:
1. You must do this in-place without making a copy of the array.
2. $1\leq nums.length \leq 10^{4}$
3. $-2^{31} \leq nums[i] \leq 2^{31}-1$

** Examples:
#+name: 283 Move Zeroes example
#+caption: 283 Move Zeroes example
#+begin_example
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Input: nums = [0]
Output: [0]
#+end_example

* Solution

** Understanding the problem
:LOGBOOK:
CLOCK: [2022-01-31 Mon 16:43]--[2022-01-31 Mon 16:47] =>  0:04
:END:
Again, let's first consider the trivial case where ~len(nums) == 1~. We don't need to do anything in this case.

In general, we will have to at least scan ~nums~ once.
** Algorithm
:LOGBOOK:
CLOCK: [2022-01-31 Mon 16:47]--[2022-01-31 Mon 16:56] =>  0:09
:END:
Scan the array and look for 0's and record their position.
Iterate through their positions and remove zeroes, append zero in the end.
** Code
#+name: 283 Move Zeroes my solution
#+caption: 283 Move Zeroes my solution
#+begin_src python :results output code :noweb yes
def moveZeroes(nums):
    """
    :type nums: List[int]
    :rtype: None Do not return anything, modify nums in-place instead.
    """
    poses = []
    for i, n in enumerate(nums):
        if n == 0:
            poses.append(i)

    for i, pos in enumerate(poses):
        # we use pos-i because we moved i number of zeros to the end
        nums.append(nums.pop(pos-i))


# tests
nums = [0]
moveZeroes(nums)
print(nums == [0])

nums = [0, 1]
moveZeroes(nums)
print(nums == [1, 0])

nums = [0, 1, 2, 0]
moveZeroes(nums)
print(nums == [1, 2, 0, 0])

nums = [1, 2 ]
moveZeroes(nums)
print(nums == [1, 2])
#+end_src

#+name: 283 Move Zeroes my solution-results
#+caption: 283 Move Zeroes my solution-results
#+RESULTS: 283 Move Zeroes my solution
#+begin_src python
True
True
True
True
#+end_src
*** Complexity
**** Time complexity:
~O(n)~, one full scan.
**** Space complexity: 
~O(n)~, potentially ~nums~ can be all zeroes so ~len(poses) == len(nums)~.

** Leetcode solution
:LOGBOOK:
CLOCK: [2022-02-01 Tue 09:13]--[2022-02-01 Tue 09:14] =>  0:01
:END:
~nil~.
#+name: 283 Move Zeroes leetcode solution
#+caption: 283 Move Zeroes leetcode solution
#+begin_src python :results output code :noweb yes
<<imports for typing>>

#+end_src

#+name: 283 Move Zeroes leetcode solution-results
#+caption: 283 Move Zeroes leetcode solution-results
#+RESULTS: 283 Move Zeroes leetcode solution
#+begin_src none

#+end_src
*** Time complexity:

*** Space complexity: 

* More analysis
** General thoughts
** Related problems

* Log time
:LOGBOOK:
CLOCK: [2022-01-31 Mon 16:41]--[2022-01-31 Mon 16:43] =>  0:02
:END:
